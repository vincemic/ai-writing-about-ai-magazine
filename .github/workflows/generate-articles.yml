name: Generate Daily AI Articles

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      test_mode:
        description: 'Run in test mode (uses mock data)'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "article-generation"
  cancel-in-progress: false

jobs:
  generate-articles:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm install openai@^4.0.0 axios fs-extra
        
    - name: Generate articles for each author
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TEST_MODE: ${{ github.event.inputs.test_mode }}
      run: |
        node scripts/generate-daily-articles.js
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add changes
        git add data/articles.json
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ðŸ¤– Daily article generation - $(date '+%Y-%m-%d')"
          git push
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Build with Next.js
      run: |
        npm run build
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './out'
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-articles
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4